version: '3.9'
services:
  backend:
    build: ./backend
    container_name: backend
    ports:
      - 4000:${BACK_PORT}
    environment:
      NODE_ENV: ${NODE_ENV}
      BACK_PORT: ${BACK_PORT}
      WEATHER_API_KEY: ${WEATHER_API_KEY}
      FRONT_PORT: ${FRONT_PORT}
      NGINX_PORT: ${NGINX_PORT}
      # POSTGRES_HOST: ${POSTGRES_HOST}
      # POSTGRES_DB: ${POSTGRES_DB}
      # POSTGRES_USER: ${POSTGRES_USER}
      # POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      # POSTGRES_PORT: ${POSTGRES_PORT}
    volumes:
      - ./backend:/app
      - /app/node_modules
    # depends_on:
    #   - db
    networks:
      - appnet
      # - dbnet
  
  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - 5000:${FRONT_PORT}
    environment:
      NODE_ENV: ${NODE_ENV}
      FRONT_PORT: ${FRONT_PORT}
      BACK_PORT: ${BACK_PORT}
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - appnet
  
  # db:
  #   build: ./db
  #   container_name: db
  #   environment:
  #     POSTGRES_DB: ${POSTGRES_DB}
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #   volumes:
  #     - pg-data:/var/lib/postgresql/data
  #   ports:
  #     - 3434:${POSTGRES_PORT}
  #   networks:
  #     - dbnet

# volumes:
#   pg-data:

networks:
  appnet:
    name: appnet
    driver: bridge
  # dbnet:
  #   name: dbnet
  #   driver: bridge